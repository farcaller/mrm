name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: "latest"
          message: "Latest release"
          force_push_tag: true

  create_release:
    needs: create_tag
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: ${{ github.ref_name }}
          draft: false
          prerelease: true
          generate_release_notes: true

  build:
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: -linux
          - os: macos-latest
            release_suffix: -mac
          - os: windows-latest
            release_suffix: .exe
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      #- name: Analyze project source
      #  run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      #- name: Run tests
      #  run: dart test
      
      - name: Build the app
        run: dart compile exe bin/mrm.dart

      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: dart compile exe bin/mrm.dart -o bin/mrm-linux
      
      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: dart compile exe bin/mrm.dart -o bin/mrm-mac

      - name: Run Windows Build
        if: matrix.os == 'windows-latest'
        run: dart compile exe bin/mrm.dart -o bin/mrm.exe
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: bin/mrm${{ matrix.release_suffix }}
